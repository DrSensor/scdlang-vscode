# TODO: publish syntaxset.packdump to github release page
name: Build

on:
  pull_request:
    paths:
    - docker-compose.yml
    - '*.dockerfile'
    - '*.dhall'
    - 'examples/*'
    - scripts/*
  push:
    branches: ['*', '*/*', '*/*/*'] #cuz https://golang.org/pkg/path/#Match doesn't support globstar ðŸ˜¢
    tags: ['v?*.*.*']               #and it doesn't support regex \d or alike

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [tmLanguage, sublime-syntax]
        include:
        - { target: tmLanguage,     extension: json }
        - { target: sublime-syntax, extension: yaml }
    steps:
    #region Preparation
    - name: Install hub.github.com #TODO: replace this... (https://github.com/actions/virtual-environments/issues/1#issuecomment-537105957)
      run: |-
        # FIXME: simplify this with https://github.com/github/hub/issues/2249#issuecomment-536557540
        wget -nv 'https://glare.now.sh/github/hub/.*linux-amd64.*.tgz' -O /tmp/hub-latest.tgz
        mkdir hub-latest && tar xf /tmp/hub-latest.tgz --strip=1 -C hub-latest
        cd hub-latest && sudo ./install
        rm -r ../hub-latest /tmp/*.tgz
        hub --version
    - uses: actions/checkout@v1
    - name: Prepare **dist** folder
      run: |-
        mkdir -p dist/rules
        mkdir -p dist/syntect/{syntaxes,themes}
    - run: docker-compose build
    #endregion Preparation

    #region Build
    - name: build Scdlang.$extension.dhall
      run: docker-compose run --rm --user $(id --user) dhall-${{ matrix.extension }}
    - name: create Scdlang.tmLanguage
      if: matrix.target == 'tmLanguage'
      run: |-
        sudo npm install ---global pnpm
        pnpm install
        ./scripts/json2plist.js dist/Scdlang.${{ matrix.target }}.json -
    - name: create syntect.packdump
      if: matrix.target == 'sublime-syntax'
      run: |-
        docker-compose run --rm --user $(id --user) packdump
        mv dist/syntect/syntaxes.bin dist/syntect.packdump
        rm -r dist/syntect
    - name: create Scdlang.DHALL-$extension.bin
      run: extension=${{ matrix.target }} docker-compose run --rm --user $(id --user) dhall-encode
    - name: create Scdlang.$extension.schema.dhall
      run: >-
        docker-compose run --rm --user $(id --user) --entrypoint=bash dhall -c
        "dhall type --file syntaxes/Scdlang.${{ matrix.target }}.dhall > dist/Scdlang.${{ matrix.target }}.schema.dhall"
    #endregion Build, name: create .tmLanguage.json }

    - uses: actions/upload-artifact@master
      with: { name: '${{ matrix.target }}', path: dist }

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@master
      with: { name: tmLanguage, path: dist }
    - uses: actions/download-artifact@master
      with: { name: sublime-syntax, path: dist }
    - run: ls -lshaR dist
    - name: Releases
      if: contains(github.ref, 'refs/tags')
      #TODO: ...with actions/github-script WHEN STABLE (https://github.com/actions/virtual-environments/issues/1#issuecomment-537105957)
      # but first, seprate this in another job and simplify --attach
      run: >-
        git for-each-ref --format="%(contents:subject)%0a%0a%(contents:body)"
        ${{ github.ref }} | hub release create -F- --draft
        --attach dist/Scdlang.tmLanguage.json
        --attach dist/Scdlang.tmLanguage
        --attach dist/Scdlang.sublime-syntax
        --attach dist/syntect/syntaxes.bin
        ${GITHUB_REF##*/}
      env: { GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}' }