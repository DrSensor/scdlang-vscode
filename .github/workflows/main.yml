# TODO: publish syntaxset.packdump to github release page
name: Build

on:
  pull_request:
    paths:
    - docker-compose.yml
    - '*.dockerfile'
    - '*.dhall'
    - 'examples/*'
    - scripts/*
  push:
    branches: ['*', '*/*', '*/*/*'] #cuz https://golang.org/pkg/path/#Match doesn't support globstar ðŸ˜¢
    tags: ['v?*.*.*']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    #region Preparation
    - name: Install hub.github.com
      run: |
        wget -nv 'https://glare.now.sh/github/hub/.*linux-amd64.*.tgz' -O /tmp/hub-latest.tgz
        mkdir hub-latest && tar xvf /tmp/hub-latest.tgz --strip=1 -C hub-latest
        cd hub-latest && sudo ./install
        rm -r ../hub-latest /tmp/*.tgz
    - run: hub --version
    - run: sudo npm install --global pnpm

    - uses: actions/checkout@v1
    - name: Prepare **dist** folder
      run: |
        mkdir -p dist/rules
        mkdir -p dist/syntect/{syntaxes,themes}
    - run: docker-compose build
    #endregion Preparation

    #region Build
    - { run: docker-compose run --rm --user $(id --user) dhall-json,            name: create Scdlang.tmLanguage.json }
    - { run: pnpm i && ./scripts/json2plist.js dist/Scdlang.tmLanguage.json -,  name: create Scdlang.tmLanguage      }
    - { run: docker-compose run --rm --user $(id --user) convert_syntax,        name: create Scdlang.sublime-syntax  }
    - { run: docker-compose run --rm --user $(id --user) packdump,              name: create syntaxes.bin            }
    #endregion Build, name: create .tmLanguage.json }

    - uses: actions/upload-artifact@master
      if: github.event_name == 'pull_request' || endsWith(github.ref, 'master')
      with: { name: grammar, path: dist }
    - name: Releases
      if: contains(github.ref, 'refs/tags')
      run: hub release create --draft         \
        --attach dist/Scdlang.tmLanguage.json \
        --attach dist/Scdlang.tmLanguage      \
        --attach dist/Scdlang.sublime-syntax  \
        --attach dist/syntect/syntaxes.bin    \
        ${GITHUB_REF##*/}